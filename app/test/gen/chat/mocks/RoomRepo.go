// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/charmingruby/clowork/internal/chat/model"
	mock "github.com/stretchr/testify/mock"
)

// RoomRepo is an autogenerated mock type for the RoomRepo type
type RoomRepo struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, room
func (_m *RoomRepo) Create(ctx context.Context, room model.Room) error {
	ret := _m.Called(ctx, room)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.Room) error); ok {
		r0 = rf(ctx, room)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindByName provides a mock function with given fields: ctx, name
func (_m *RoomRepo) FindByName(ctx context.Context, name string) (model.Room, error) {
	ret := _m.Called(ctx, name)

	if len(ret) == 0 {
		panic("no return value specified for FindByName")
	}

	var r0 model.Room
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (model.Room, error)); ok {
		return rf(ctx, name)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) model.Room); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Get(0).(model.Room)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewRoomRepo creates a new instance of RoomRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRoomRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *RoomRepo {
	mock := &RoomRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
